# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  id: ID!
  name: String!
  userName: String!
  photo: String
  phone: String
  company: String
  email: String
  bio: String
  img: String
  joinDate: Date
  verifyType: VerifyType
  verifyName: String
  links: [Link]
}

enum VerifyType {
  TWITTER
  INSTAGRAM
}

enum LinkType{
  WEBSITE
  DISCORD
  INSTAGRAM
  YOUTUBE
  FACEBOOK
  TIKTOK
}

type Link {
  type: LinkType!
  url: String!
}

scalar Date

type Item {
  id: ID!
  name: String!
  tag: String
  description: String
  uploadUrl: String!
  saleStatus: Int!
  price: ItemPrice
  creatorId: Int!
  creator: String!
  createDate: Date
}



type ItemPrice {
  type: Int!
  onsale: onsaleCoin!
  initPrice: Float!
  startDate: Date
  expirationDate: Date

}

type Collection {
  id: ID!
  name: String!
  items: [Item]
  createDate: Date

}

enum walletType {
  BANK
  COIN
  WALLET
}

type wallet {
  type: walletType!
  pubToken: String!
}

type payment {
  itemId: Int!
  payType: Int!
  price: Float!
  payDate: Date
  
}

input Bid {
  itemId: Int!
  balance: Float!
  serviceFee: Float
  total: Float
}



enum SearchType {
  GAME
  VIDEO
  ANIMATION
  PHOTOGRPHY
  ALL
}

input PriceRange {
  max: Float!
  min: Float!
}

enum blockchain {
  ETHEREUM
  MATIC
  KLAYTN
  SOLANA
  BNB
}



input SearchParm {
  param: String!
  type: SearchType
  price: PriceRange
  chain: blockchain
  onsale: onsaleCoin
  creator: String
}

enum onsaleCoin {
  ETH
  WETH
  oxBTC
}


type Query {
  items(param:SearchParm!): [Item]
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  placeBid(bid: Bid) :String
  
}
